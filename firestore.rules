rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /prompts/{promptId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        request.resource.data
          .diff(resource.data)
          .changedKeys()
          .hasOnly(['likes', 'likedBy', 'sharedBy', 'shared']) ||
        (
          request.auth.uid == resource.data.userId &&
          request.resource.data.diff(resource.data).changedKeys().hasOnly(['text'])
        )
      );

      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
      }
    }

    match /users/{uid} {
      match /profile/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
      }

      match /savedPrompts/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
      }

      match /notifications/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
      }
    }

    match /conversations/{convId} {
      allow create: if request.auth != null &&
        request.auth.uid in request.resource.data.members;
      allow read, update: if request.auth != null &&
        request.auth.uid in resource.data.members;

      match /messages/{msgId} {
        allow read, create: if request.auth != null &&
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(convId)).data.members;
      }
    }
  }
}
